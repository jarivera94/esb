<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xsi:schemaLocation="
         http://www.osgi.org/xmlns/blueprint/v1.0.0 
         https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
         http://camel.apache.org/schema/blueprint 
         http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
         http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 
         http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">

	<cxf:rsServer id="servicioIgacRinex" 
		address="${HOST_RINEX}"
		serviceClass="com.koghi.urt.servicios.igac.ws.rinex.Servicio"
		loggingFeatureEnabled="true" />

	<cxf:rsClient id="servicioRinexEstaciones"
		address="https://services.igac.gov.co/rinex/rest/estaciones"
		serviceClass="com.koghi.urt.servicios.igac.ws.rinex.Servicio"
		loggingFeatureEnabled="false" />

	<cxf:rsClient id="servicioRinexProductos"
		address="https://services.igac.gov.co/rinex/rest/productos"
		serviceClass="com.koghi.urt.servicios.igac.ws.rinex.Servicio"
		loggingFeatureEnabled="false" />

	<bean id="processorClean"
		class="com.koghi.urt.servicios.igac.procesadores.rinex.ProcessorCleanRinex" />

	<camelContext id="bean-igac-rinex"
		xmlns="http://camel.apache.org/schema/blueprint">

<!-- 		<onException> -->
<!-- 			<exception>java.lang.Exception</exception> -->
<!-- 			<redeliveryPolicy maximumRedeliveries="5" -->
<!-- 				redeliveryDelay="1000" /> -->
<!-- 			<to uri="direct:exception" /> -->
<!-- 		</onException> -->

		<route id="_route1-igac-rinex-estaciones">
			<from uri="cxfrs://bean://servicioIgacRinex" />

			<!-- Crea una transacción -->
<!-- 			<setHeader headerName="operacionTransversal"> -->
<!-- 				<simple>crearTransaccion</simple> -->
<!-- 			</setHeader> -->
<!-- 			<wireTap uri="direct:servicioTransversalCrear" /> -->
<!-- 			<delay> -->
<!-- 				<constant>2000</constant> -->
<!-- 			</delay> -->
			<!-- *************************************** -->

			<!-- Crea el mensaje -->
<!-- 			<setHeader headerName="operacionTransversal"> -->
<!-- 				<simple>crearMensaje</simple> -->
<!-- 			</setHeader> -->
<!-- 			<wireTap uri="direct:crearMensaje" /> -->
<!-- 			<delay> -->
<!-- 				<constant>1000</constant> -->
<!-- 			</delay> -->
			<!-- *************************************** -->

			<choice>
				<when>
					<simple>${in.header.operationName} == 'getEstaciones'</simple>
					<to uri="direct:estaciones" />
				</when>
				<otherwise>
					<to uri="direct:productos" />
				</otherwise>
			</choice>

			<!-- Crea el mensaje -->
<!-- 			<setHeader headerName="operacionTransversal"> -->
<!-- 				<simple>crearMensaje</simple> -->
<!-- 			</setHeader> -->
<!-- 			<wireTap uri="direct:crearMensaje" /> -->
<!-- 			<delay> -->
<!-- 				<constant>1000</constant> -->
<!-- 			</delay> -->
			<!-- *************************************** -->

			<!-- Actualiza la transacción -->
<!-- 			<setHeader headerName="operacionTransversal"> -->
<!-- 				<simple>actualizarTransaccion</simple> -->
<!-- 			</setHeader> -->
<!-- 			<setHeader headerName="CodEstado"> -->
<!-- 				<simple>1</simple> -->
<!-- 			</setHeader> -->
<!-- 			<setHeader headerName="ValReintentos"> -->
<!-- 				<simple>0</simple> -->
<!-- 			</setHeader> -->
<!-- 			<wireTap uri="direct:servicioTransversalActualizar" /> -->
<!-- 			<delay> -->
<!-- 				<constant>1000</constant> -->
<!-- 			</delay> -->
			<!-- *************************************** -->

			<to uri="mock:result" />
		</route>

		<route id="_route2-igac-rinex-estaciones">
			<from uri="direct:estaciones" />
			<setHeader headerName="CamelHttpPath">
				<simple></simple>
			</setHeader>
			<to uri="cxfrs://bean://servicioRinexEstaciones?throwExceptionOnFailure=false" />
			<log message="Servicio: Rinex - Operación: getEstaciones - Salida " />
			<to uri="mock:result" />
		</route>

		<route id="_route3-igac-rinex-productos">
			<from uri="direct:productos" />
			<setHeader headerName="idEstacion">
				<simple>${body[0]}</simple>
			</setHeader>
			<setHeader headerName="fechaCalendario">
				<simple>${body[1]}</simple>
			</setHeader>
			<setHeader headerName="tipoArchivo">
				<simple>${body[2]}</simple>
			</setHeader>
			<setHeader headerName="CamelHttpPath">
				<simple></simple>
			</setHeader>
			<process ref="processorClean" />
			<to uri="cxfrs://bean://servicioRinexProductos?throwExceptionOnFailure=false" />
			<log message="Servicio: Rinex - Operación: getProductos - Salida" />
			<setHeader headerName="productosResult">
				<simple>${body}</simple>
			</setHeader>
			<to uri="mock:result" />
		</route>

		<route>
			<from uri="direct:servicioTransversalCrear" />
			<process ref="processorTransversalDatos" />
			<log message="Creando Transacción" />
			<process ref="processorServicioTransversal" />
			<setHeader headerName="Content-Type">
				<simple>application/json</simple>
			</setHeader>
			<setHeader headerName="CamelHttpMethod">
				<simple>POST</simple>
			</setHeader>
			<setHeader headerName="CamelHttpPath">
				<simple></simple>
			</setHeader>
			<to uri="cxfrs://bean://servicioTransversalCrearTransacion" />
			<log message="Se creó la transacción" />
		</route>

		<route>
			<from uri="direct:servicioTransversalActualizar" />
			<process ref="processorTransversalDatos" />
			<log message="Actualizando Transacción" />
			<process ref="processorServicioTransversal" />
			<setHeader headerName="Content-Type">
				<simple>application/json</simple>
			</setHeader>
			<setHeader headerName="CamelHttpMethod">
				<simple>POST</simple>
			</setHeader>
			<setHeader headerName="CamelHttpPath">
				<simple></simple>
			</setHeader>
			<to uri="cxfrs://bean://servicioTransversalActualizarTransacion" />
			<log message="Se actualizó la transacción" />
		</route>

		<route>
			<from uri="direct:crearMensaje" />
			<process ref="processorTransversalDatos" />
			<log message="Creando mensaje" />
			<process ref="processorServicioTransversal" />
			<to uri="activemq:queue:QMensajeCrear" />
			<log message="Se creó el mensaje" />
		</route>

		<route>
			<from uri="direct:crearError" />
			<process ref="processorTransversalDatos" />
			<log message="Creando error" />
			<process ref="processorServicioTransversal" />
			<choice>
				<when>
					<simple>${in.header.ErrorName} == 'Connection'</simple>
					<to uri="mock:result" />
				</when>
				<otherwise>
					<to uri="activemq:queue:QErrorCrear" />
					<log message="Se creó el error" />
					<setHeader headerName="operacionTransversal">
						<simple>actualizarTransaccion</simple>
					</setHeader>
					<setHeader headerName="CodEstado">
						<simple>-2</simple>
					</setHeader>
					<setHeader headerName="ValReintentos">
						<simple>5</simple>
					</setHeader>
					<wireTap uri="direct:servicioTransversalActualizar" />
					<delay>
						<constant>1000</constant>
					</delay>
				</otherwise>
			</choice>

		</route>

		<route>
			<from uri="direct:exception" />
			<log message="se Generó un error" />
			<process ref="processorError" />
			<setHeader headerName="operacionTransversal">
				<simple>crearError</simple>
			</setHeader>
			<wireTap uri="direct:crearError" />
			<delay>
				<constant>1000</constant>
			</delay>
		</route>
	</camelContext>

</blueprint>
