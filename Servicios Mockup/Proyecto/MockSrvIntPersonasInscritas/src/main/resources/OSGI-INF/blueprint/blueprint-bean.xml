<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
	xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
	xsi:schemaLocation="
				http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
				http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
				http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
				 http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd">

	<cxf:rsServer id="servicioConsulta"
		address="${HOST_MOCK_PERSONAS_INSCRITAS}"
		serviceClass="com.koghi.nodo.urt.ws.mockSrvIntPersonasInscritas.WSServicioConsultaPersonasInscritas">
	</cxf:rsServer>

	<cxf:rsClient id="servicioExternoDePrueba"
		address="${HOST_SERVICIO_CONSUMIR}"
		serviceClass="com.koghi.nodo.urt.ws.mockSrvIntPersonasInscritas.WSServicioConsultaPersonasInscritas">
	</cxf:rsClient>

	<bean id="prcMockPersonas"
		class="com.koghi.nodo.urt.procesadores.mockSrvIntPersonasInscritas.PrcMockPersonasInscritas" />
	<bean id="prcSetErrorInfoUsuario"
		class="com.koghi.nodo.urt.procesadores.mockSrvIntPersonasInscritas.PrcSetErrorInfoUsuario" />
	<bean id="prcImprimir"
		class="com.koghi.nodo.urt.procesadores.mockSrvIntPersonasInscritas.PrcImprimir" />
	<bean id="prcSetCodEstado"
		class="com.koghi.nodo.urt.procesadores.mockSrvIntPersonasInscritas.PrcSetCodEstado" />
	<bean id="prcHTTPStatus"
		class="com.koghi.nodo.urt.procesadores.mockSrvIntPersonasInscritas.PrcHttpStatus" />
	<bean id="prcRedeliveryCounter"
		class="com.koghi.nodo.urt.procesadores.mockSrvIntPersonasInscritas.PrcRedeliveryCounter" />
	<bean id="prcGeneralException"
		class="com.koghi.nodo.urt.procesadores.mockSrvIntPersonasInscritas.PrcGeneralException" />
	<bean id="prcSeteoIdExchange"
		class="com.koghi.nodo.urt.procesadores.mockSrvIntPersonasInscritas.PrcSeteoIdExchange" />
	<bean id="prcConfigurarHeadersTx"
		class="com.koghi.nodo.urt.procesadores.mockSrvIntPersonasInscritas.PrcConfigurarHeadersTx" />

	<camelContext id="camelId"
		xmlns="http://camel.apache.org/schema/blueprint">
		
		<onException onRedeliveryRef="prcRedeliveryCounter" >
<!-- 			<exception>org.apache.camel.component.http.HttpOperationFailedException</exception> -->
			<exception>javax.ws.rs.WebApplicationException</exception>
<!-- 			<exception>java.lang.RuntimeException</exception> -->
			<redeliveryPolicy maximumRedeliveries="{{MAX_RETRIES}}"
				redeliveryDelay="{{RETRY_DELAY}}" />
			<handled><constant>true</constant></handled>
			<to uri="direct:exceptionAfterRedelivery" />
			<log message = "_________________________________________________"/>
	        <log message = "Excepción de conexión capturada, ahora continúa la ejecución."/>
	        <log message = "‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾"/>
		</onException>
		
		<onException>
			<exception>java.lang.RuntimeException</exception>
			<handled><constant>true</constant></handled>
			<process ref = "prcRedeliveryCounter"/>
		</onException>
		
		<route id="route0">
			<from uri="cxfrs:bean:servicioConsulta" />
			<process ref="prcSeteoIdExchange" />
			<process ref="prcConfigurarHeadersTx" />
			<setHeader headerName="IdServicio">
				<simple>{{ID_SERVICIO}}</simple>
			</setHeader>
			<setHeader headerName="IdOperacion">
				<simple>{{ID_OPERACION}}</simple>
			</setHeader>
			<setHeader headerName="EntidadReceptora">
				<simple>{{ENTIDAD_RECEPTORA}}</simple>
			</setHeader>
			<setHeader headerName="ValReintentos">
				<simple>0</simple>
 			</setHeader>
			<setHeader headerName="TelefonoMesaDeAyuda">
				<simple>{{TELEFONO_MESA_DE_AYUDA}}</simple>
			</setHeader>
			<setHeader headerName="NombreContactoMesaDeAyuda">
				<simple>{{NOMBRE_CONTACTO_MESA_DE_AYUDA}}</simple>
			</setHeader>
			<setHeader headerName="VersionServicio">
				<simple>{{VERSION_SERVICIO}}</simple>
			</setHeader>
			<setHeader headerName="PropSetHTTPStatus">
				<simple>{{SET_HTTP_STATUS}}</simple>
			</setHeader>
			<setHeader headerName="PropCodStatusHTTP">
				<simple>{{HTTP_ERROR_CODE}}</simple>
			</setHeader>
			<setHeader headerName="ConsumirServicioExterno">
				<simple>{{CONSUMIR_SERVICIO_EXTERNO}}</simple>
			</setHeader>
			<setHeader headerName="CrearTransaccion">
				<simple>{{CREAR_TRANSACCION}}</simple>
			</setHeader>
			<setHeader headerName="routeEndTimeout">
				<simple>{{ROUTE_END_TIMEOUT}}</simple>
			</setHeader>
			<setHeader headerName="PropGenError">
				<simple>{{GENERAR_ERROR}}</simple>
			</setHeader>
<!-- 			<setHeader headerName="maxRetries"> -->
<!-- 				<simple>{{MAX_RETRIES}}</simple> -->
<!-- 			</setHeader> -->
			<choice>
				<when>
					<simple>${in.header.CrearTransaccion} == true</simple>
					<!-- Crea una transacción -->
					<setHeader headerName="operacionTransversal">
						<simple>crearTransaccion</simple>
					</setHeader>
					<wireTap uri="direct:servicioTransversalCrear" />
					<delay>
						<constant>2000</constant>
					</delay>
				</when>
			</choice>
			<!-- *************************************** -->
			<log message = "JUSTO ANTES DEL PRIMER CHOICE" />

			<choice>
				<when>
					<simple>${in.header.ConsumirServicioExterno} == true</simple>
					<setHeader headerName="CamelHttpPath">
						<simple></simple>
					</setHeader>
					<log message="*************** En proceso de consumo de servicio externo: {{HOST_SERVICIO_CONSUMIR}} ***************" />
					<to uri="cxfrs://bean://servicioExternoDePrueba?throwExceptionOnFailure=true" />
					<log message="*************** Servicio externo consumido exitosamente ***************" />
				</when>
				<otherwise>
					<log message="*************** En proceso de generación de respuesta ***************" />
					<process ref="prcMockPersonas" />
				</otherwise>
			</choice>
			<process ref="prcSetCodEstado" />
			<choice>
				<when>
					<simple>${in.header.PropSetHTTPStatus} == true</simple>
					<process ref="prcHTTPStatus" />
				</when>
			</choice>
			<choice>
				<when>
					<simple>${in.header.GenError} == true</simple>
					<process ref="prcGeneralException" />
				</when>
			</choice>
			<choice>
				<when>
					<simple>${in.header.CrearTransaccion} == true</simple>
					<!-- Actualiza la transacción -->
					<setHeader headerName="operacionTransversal">
						<simple>actualizarTransaccion</simple>
					</setHeader>
					<setHeader headerName="CodEstado">
						<simple>1</simple>
					</setHeader>
					<wireTap uri="direct:servicioTransversalActualizar" />
					<delay>
						<constant>1000</constant>
					</delay>
				</when>
			</choice>
			<!-- *************************************** -->
			<log message = "HTTP Status: ${property.CamelHttpResponseCode}" />
			<log message = "Valor para CodEstado: ${in.header.CodEstado}"/>
			<process ref="prcImprimir" />
			<choice>
				<when>
					<simple>${in.header.CrearTransaccion} == true</simple>
					<setHeader headerName="operacionTransversal">
						<simple>limpiarCacheTransaccion</simple>
					</setHeader>
					<process ref="processorServicioTransversal" />
				</when>
			</choice>
			<to uri="mock:result" />
		</route>
		
		<route>
			<from uri="direct:servicioTransversalCrear" />
			<process ref="processorTransversalDatos" />
			<log message="Creando Transacción" />
			<process ref="processorServicioTransversal" />
			<setHeader headerName="Content-Type">
				<simple>application/json</simple>
			</setHeader>
			<setHeader headerName="CamelHttpMethod">
				<simple>POST</simple>
			</setHeader>
			<setHeader headerName="CamelHttpPath">
				<simple></simple>
			</setHeader>
			<to uri="cxfrs://bean://servicioTransversalCrearTransacion" />
			<log message="Se creó la transacción" />
		</route>

		<route>
			<from uri="direct:servicioTransversalActualizar" />
			<process ref="processorTransversalDatos" />
			<log message="Actualizando Transacción" />
			<process ref="processorServicioTransversal" />
			<setHeader headerName="Content-Type">
				<simple>application/json</simple>
			</setHeader>
			<setHeader headerName="CamelHttpMethod">
				<simple>POST</simple>
			</setHeader>
			<setHeader headerName="CamelHttpPath">
				<simple></simple>
			</setHeader>
			<to uri="cxfrs://bean://servicioTransversalActualizarTransacion" />
			<log message="Se actualizó la transacción" />
		</route>
		
		<route id="exceptionRouteAfterRedeliveryID">
			<from uri="direct:exceptionAfterRedelivery" />
			<setHeader headerName="CamelHttpMethod">
				<simple>POST</simple>
			</setHeader>
			
			<onException>
				<exception>java.lang.Exception</exception>
				<continued><constant>true</constant></continued>
				<log message = "Error en la ruta de manejo final. ${body}"/>
			</onException>
			
			<!-- RUTA QUE ACTUALIZARA TRANSACCION, Y ENVIARA CORREOS A LA COLA DE CORREOS -->
			
			<!-- *************************************** -->
			
			<log message="*************ENTRA A RUTA exceptionRouteAfterRedelivery" />

			<!-- Actualiza la transacción -->
			<setHeader headerName="operacionTransversal">
				<simple>actualizarTransaccion</simple>
			</setHeader>
			<setHeader headerName="CodEstado">
				<simple>-1</simple>
			</setHeader>
<!-- 			<setHeader headerName="ValReintentos"> -->
<!-- 				<simple>{{MAX_RETRIES}}</simple> -->
<!-- 			</setHeader> -->
			<wireTap uri="direct:servicioTransversalActualizar" />
			<delay>
				<constant>1000</constant>
			</delay>
			
			<!-- *************************************** -->
			
			<!-- ENVIO CORREO A MESA DE SERVICIO -->
			<!-- *************************************** -->
<!-- 			<log message="*****ENTRA AL BLOQUE DE CORREO MESA DE AYUDA. JUSTO ANTES DE PROCESAR EL prcConsultaParametro*****" /> -->
<!-- 			<process ref="prcConsultaParametro" /> -->
<!-- 			<log message="*****JUSTO ANTES DE CONSUMIR EL SERVICIO TRASNVERSAL servicioTransversalConsultarParametro*****" /> -->
<!-- 			<setHeader headerName="CamelHttpPath"> -->
<!-- 				<simple></simple> -->
<!-- 			</setHeader> -->
<!-- 			<setHeader headerName="CamelHttpQuery"> -->
<!-- 				<simple></simple> -->
<!-- 			</setHeader>			 -->
<!-- 			<to uri="cxfrs://bean://servicioTransversalConsultarParametro" /> -->
<!-- 			<log message="*****JUSTO DESPUES DE CONSULTAR EL SERVICIO TRASNVERSAL servicioTransversalConsultarParametro*****" /> -->
<!-- 			<log message="*****JUSTO ANTES DEL PROCESSOR prcRespuestaParametro*****" /> -->
<!-- 			<process ref="prcRespuestaParametro" /> -->
<!-- 			<log message="*****JUSTO DESPUES DEL PROCESSOR prcRespuestaParametro, JUSTO ANTES DE ENVIAR A PILA DE CORREO QCorreoElectronicoEnviar*****" /> -->
			
			<!-- *************************************** -->
			
			<!-- ENVIO CORREO A RESPONSABLE DE SERVICIO -->
			<!-- *************************************** -->
<!-- 			<log message="*****ENTRA AL BLOQUE DE CORREO RESPONSABLE DE SERVICIO. JUSTO ANTES DE PROCESAR EL prcConsultaServicio*****" /> -->
<!-- 			<process ref="prcConsultaServicio" /> -->
<!-- 			<log message="*****JUSTO DESPUES DEL PROCESSOR prcConsultaServicio, JUSTO ANTES DE CONSUMIR EL SERVICIO TRANSVERSALE servicioTransversalConsultarServicio*****" /> -->
<!-- 			<setHeader headerName="CamelHttpPath"> -->
<!-- 				<simple></simple> -->
<!-- 			</setHeader> -->
<!-- 			<setHeader headerName="CamelHttpQuery"> -->
<!-- 				<simple></simple> -->
<!-- 			</setHeader> -->
<!-- 			<to uri="cxfrs://bean://servicioTransversalConsultarServicio" /> -->
<!-- 			<log message="*****JUSTO DESPUES DE CONSUMIR EL SERVICIO servicioTransversalConsultarServicio*****" /> -->

<!-- 			<log message="*****JUSTO ANTES DEL PROCESSOR prcRespuestaServicio*****" /> -->
<!-- 			<process ref="prcRespuestaServicio" /> -->
<!-- 			<log message="*****JUSTO DESPUES DEL PROCESSOR prcRespuestaServicio, JUSTO ANTES DE ENVIAR A LA COLA DE CORREO QCorreoElectronicoEnviar*****" /> -->
<!-- 			<process ref="prcImprimirBody" /> -->
<!-- 			<to uri="activemq:QCorreoElectronicoEnviar?disableReplyTo=false" /> -->
<!-- 			<log message="*****JUSTO DESPES DE ENVIAR A LA COLA DE CORREO QCorreoElectronicoEnviar*****" /> -->
			
			<!-- *************************************** -->
			
			<log message="***** ANTES DEL PROCESS FINAL *****" />
			<process ref="prcSetErrorInfoUsuario" />
			<log message="***** DESPUÉS DEL PROCESS FINAL *****" />
			<setHeader headerName="operacionTransversal">
				<simple>limpiarCacheTransaccion</simple>
			</setHeader>
			<process ref="processorServicioTransversal" />
			<to uri="mock:result" />
			
			
		</route>
	</camelContext>
</blueprint>
